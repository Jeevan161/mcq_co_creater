import openai
from django.conf import settings

class OpenAIClient:
    def __init__(self):
        """
        Initialize the OpenAI client with API key, base URL, and version from Django settings.
        """
        # Ensure the OpenAI API key and Azure endpoint are loaded
        self.api_key = settings.OPENAI_API_KEY
        self.api_base = settings.OPENAI_API_BASE
        self.api_version = settings.OPENAI_API_VERSION
        openai.api_type = "azure"
        self.client = openai.AzureOpenAI(
            azure_endpoint=self.api_base,
            api_key=self.api_key,
            api_version=self.api_version
        )


    def generate_response(self, prompt, model="gpt-4-latest", max_tokens=200, temperature=0.7):
        """
        Method to generate a response from OpenAI's API using the provided prompt.

        Args:
            prompt (str): The prompt to send to OpenAI.
            model (str): The OpenAI model to use for generating the response. Default is "text-davinci-003".
            max_tokens (int): The maximum number of tokens for the response. Default is 200.
            temperature (float): Controls randomness in the output. Default is 0.7.

        Returns:
            str: The response generated by OpenAI or an error message.
        """
        messages = [
            {"role": "system", "content": "You are a technical content developer."},
            {"role": "user", "content": prompt}
        ]

        try:
            # Send the prompt to the Azure OpenAI API
            response = self.client.chat.completions.create(
                model="gpt-4o",
                messages=messages
            )
            print("Response received from OpenAI.")
            return response.choices[0].message.content.strip()

        except openai.error.OpenAIError as e:
            # Specific OpenAI API errors
            return f"OpenAI API error: {str(e)}"

        except Exception as e:
            # General exceptions
            return f"Error generating response from OpenAI: {str(e)}"
